---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/users/{user_id}/infection":
    parameters:
    - name: user_id
      in: path
      description: id
      required: true
      schema:
        type: integer
    post:
      summary: Reports an infected user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: infection reported
        '422':
          description: invalid request when reported user does not exist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                infected_user_id:
                  type: integer
              required:
              - user_id
              - infected_user_id
  "/api/v1/users/{user_id}/inventory/add_item":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: integer
    post:
      summary: Add items to inventory
      tags:
      - Inventory
      parameters: []
      responses:
        '201':
          description: adding 2 or more items
        '404':
          description: invalid request when user does not exist
        '422':
          description: invalid request when item key is not permitted
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: object
                user_id:
                  type: integer
              required:
              - items
              - user_id
  "/api/v1/users/{user_id}/inventory/remove_item":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: integer
    post:
      summary: Remove items from inventory
      tags:
      - Inventory
      parameters: []
      responses:
        '200':
          description: remove 2 or more items
        '404':
          description: invalid request when user does not exist
        '422':
          description: invalid request when item key is not permitted
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: object
                user_id:
                  type: integer
              required:
              - items
              - user_id
  "/api/v1/users/{user_id}/transfer_items/{target_user_id}":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: integer
    - name: target_user_id
      in: path
      description: target user id
      required: true
      schema:
        type: integer
    post:
      summary: Transfer items between users
      tags:
      - Inventory
      parameters: []
      responses:
        '200':
          description: items sucessfully transfered
        '404':
          description: invalid request when user does not exist
        '422':
          description: invalid request when user does not have item
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: object
                target_user_items:
                  type: object
                user_id:
                  type: integer
                target_user_id:
                  type: integer
              required:
              - items
              - user_id
  "/api/v1/report/infected_users":
    get:
      summary: Infected users percentage
      tags:
      - Report
      responses:
        '200':
          description: returns % users infected
        '404':
          description: invalid request when there are no users
  "/api/v1/report/non_infected_users":
    get:
      summary: Non-Infected users percentage
      tags:
      - Report
      responses:
        '200':
          description: returns % non-infected users
        '404':
          description: invalid request when there are no users
  "/api/v1/report/item_average_per_user":
    get:
      summary: Average items per user
      tags:
      - Report
      responses:
        '200':
          description: average items users
        '404':
          description: invalid request when there are no users
  "/api/v1/report/number_of_lost_points_by_infected_users":
    get:
      summary: Number of lost points by infected users
      tags:
      - Report
      responses:
        '200':
          description: number of lost points
        '404':
          description: invalid request when there are no users
  "/api/v1/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                age:
                  type: integer
                gender:
                  type: string
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
              required:
              - name
              - age
              - gender
              - latitude
              - longitude
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: integer
    put:
      summary: Updates a user location
      tags:
      - Users
      parameters: []
      responses:
        '204':
          description: user location updated
        '404':
          description: user not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
